<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.core.IUIComponent;
			public function scramble() : void {

				var numElements:int = this.numElements;
				for (var i:int = 0; i < 20; i++) {
					var idx:int = Math.abs(Math.random() * numElements);
					this.setElementIndex(this.getElementAt(idx), 0);
				}
				
			}
			
			
			public function clearItems():void {
				this.removeAllElements();
				this.result = 0;
			}
			
			public function createItem(correctTag:String, imgSource:String, verifySpelling:Boolean = true): void {
				trace('createItems', correctTag, imgSource, verifySpelling);
				
				var ddItem:DDTargetCard = new DDTargetCard();
				
				ddItem.imgSource = imgSource;
				ddItem.correctTag = correctTag;
				ddItem.useSpellingPopup = verifySpelling;
				
				this.addElement(ddItem);
				ddItem.addEventListener(ProgressEvent.PROGRESS, onResultChange, false, 0, true);
				
			}
			
			private function onResultChange(event:ProgressEvent): void {
				var resultTotal:Number = this.numElements;				
				var result:Number = 0;
				for (var i:int = 0; i<this.numElements; i++) {
					var ddItem:DDTargetCard = DDTargetCard(this.getElementAt(i));
					result += ddItem.result;										
				}
				this.result = result / resultTotal;		
				
				
				if (this.result == 1) {
					this.dispatchEvent(new Event(Event.COMPLETE, false, false));
				}
				
				

			}
			
			private var _result:Number = 0;

			[Bindable]
			public function get result():Number
			{
				return _result;
			}

			public function set result(value:Number):void
			{
				_result = value;
			}
			

			
			
		]]>
	</fx:Script>
	
</s:Panel>
