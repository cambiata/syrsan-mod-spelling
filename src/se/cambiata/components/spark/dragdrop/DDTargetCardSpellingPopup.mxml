<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="260"
		 
		 creationComplete="init(event)" xmlns:aaronhardy="com.aaronhardy.*"
		 
		 >
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import se.cambiata.utils.string.StringUtils;
			
			import spark.events.TextOperationEvent;

			protected function init(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				this.tiTag.setFocus();
				this.delayTimer = new Timer(500);
				this.delayTimer.addEventListener(TimerEvent.TIMER, onTimer);
				
			}
			
			
			public var ddTargetCard:DDTargetCard;
			
			
			private var _result:Number = 0;

			[Bindable]
			public function get result():Number
			{
				return _result;
			}

			public function set result(value:Number):void
			{
				_result = value;
			}
			
			private var _imgSource:String = '';

			[Bindable]
			public function get imgSource():String
			{
				return _imgSource;
			}

			public function set imgSource(value:String):void
			{
				_imgSource = value;
			}
			
			
			private var _correctTag:String = '-';

			[Bindable]
			public function get correctTag():String
			{
				return _correctTag;
			}

			public function set correctTag(value:String):void
			{
				_correctTag = value;
			}



			protected function onTagChange(event:TextOperationEvent):void
			{
				this.delayTimer.stop();
				this.delayTimer.start();
				
			}
			
			private function onTimer(event:TimerEvent): void {
				
				this.delayTimer.stop();
				this.result = StringUtils.stringCompare(this.tiTag.text, this.correctTag, '%', false);
				
				if (this.result == 1) {
					this.ddTargetCard.setResult(1);
					PopUpManager.removePopUp(this);
				}
				
				
			}
			
			
			
			private var _correctionDelayMs:int = 1000; 
			
			public function get correctionDelayMs():int
			{
				return _correctionDelayMs;
			}
			
			
			public function set correctionDelayMs(value:int):void
			{
				_correctionDelayMs = value;
				this.delayTimer.delay = value;
			}	
			
			private var delayTimer:Timer; 
			
			

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Rect width="100%"
			height="100%"
			>
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF"/>
				<s:GradientEntry color="0xCCCCCC"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>	
	
	
	
	<s:Group width="100%" height="100%" top="8">
	
	<mx:Image source="{this.imgSource}"
			  
			  width="120"
			  height="120" />
	
	
	<aaronhardy:ProgressBar id="progress" value="{this.result}" maximum="1" width="160" skinClass="com.aaronhardy.ProgressBarSkin" />
	
	<s:Label id="lblCorrectTag" fontSize="20" fontWeight="bold" text="{this.correctTag}" color="0x555555"/>
	
	<s:TextInput id="tiTag" fontSize="20" change="onTagChange(event)" width="200" textAlign="center"/>
		
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" gap="8"/>
	</s:layout>
	
	</s:Group>
	
</s:Panel>
